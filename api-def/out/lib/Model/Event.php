<?php

/**
 * Event
 *
 * PHP version 7.1
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 */
namespace OpenAPIServer\Model;

use OpenAPIServer\Interfaces\ModelInterface;

/**
 * Event
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */
class Event implements ModelInterface
{
    private const MODEL_SCHEMA = <<<'SCHEMA'
{
  "required" : [ "category", "game", "gm", "name" ],
  "type" : "object",
  "properties" : {
    "id" : {
      "type" : "integer",
      "format" : "int64"
    },
    "category" : {
      "$ref" : "#/components/schemas/Category"
    },
    "gm" : {
      "$ref" : "#/components/schemas/Member"
    },
    "game" : {
      "type" : "string",
      "example" : "7 Wonders"
    },
    "title" : {
      "type" : "string",
      "example" : "Leaders"
    },
    "tags" : {
      "type" : "array",
      "xml" : {
        "name" : "tag",
        "wrapped" : true
      },
      "items" : {
        "$ref" : "#/components/schemas/Tag"
      }
    },
    "day" : {
      "type" : "string",
      "description" : "day of the event",
      "enum" : [ "FRI", "SAT", "SUN" ]
    },
    "time" : {
      "type" : "integer",
      "description" : "first 2 digits of event time in 24 hour clock",
      "format" : "int64"
    },
    "room" : {
      "$ref" : "#/components/schemas/Room"
    },
    "table" : {
      "type" : "string"
    }
  },
  "xml" : {
    "name" : "Event"
  }
}
SCHEMA;

    /** @var int $id */
    public $id;

    /** @var \OpenAPIServer\Model\Category $category */
    private $category;

    /** @var \OpenAPIServer\Model\Member $gm */
    public $gm;

    /** @var string $game */
    public $game;

    /** @var string $title */
    public $title;

    /** @var \OpenAPIServer\Model\Tag[] $tags */
    private $tags;

    /** @var string $day day of the event*/
    private $day;

    /** @var int $time first 2 digits of event time in 24 hour clock*/
    private $time;

    /** @var \OpenAPIServer\Model\Room $room */
    public $room;

    /** @var string $table */
    public $table;


    public static function fromState(array $state): Event
    {
        // TEMPORARY
        $state['s_room'] = "ROOM LABEL REMOVE Model\Event.php";


        // validate required fields
        $required = [
          'id_event', 's_game', 's_title','s_table',
          'id_gm', //'s_lname', 's_fname',
          'id_event_type', //'s_type',
          'id_room', //'s_room'
        ];

        foreach ($required as $k) {
          if (!isset($state[$k])) {
            throw new \Exception("Event data missing required field $k");
          }
        }


        // $m = new Member($state['id_gm'], $state['s_lname'], $state['s_fname']);
        // $r = new Room($state['id_room'], $state['s_room']);

        $e = new Event();
        $e->id = $state['id_event'];
        $e->game = $state['s_game'];
        $e->title = $state['s_title'];
        $e->table = $state['s_table'];
        // $e->gm = $m;
        // $e->room = $r;



        // TODO finish filling out events

        return $e;
    }

    public function toState() {
        $arr = [
          'id_event'=>$this->id,
          's_game'  =>$this->game,
          's_title' =>$this->title,
          's_table' =>$this->table,

        ];
        return $arr;
    }


    /**
     * Returns model schema.
     *
     * @param bool $assoc When TRUE, returned objects will be converted into associative arrays. Default FALSE.
     *
     * @return array
     */
    public static function getOpenApiSchema($assoc = false)
    {
        return json_decode(static::MODEL_SCHEMA, $assoc);
    }
}
