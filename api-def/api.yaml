openapi: 3.0.1
info:
  title: GameConSuite Admin API
  description: >-
    This is the administrative API for GameConSuite.  You can find out more
    about Game Con Suite at  [https://gameconsuite.com](https://gameconsuite.com)
  # termsOfService: 'http://swagger.io/terms/'
#   contact:
#     email: lhamel@gmail.com
  license:
    name: GPLv3
#     url: 'https://www.gnu.org/licenses/gpl-3.0.en.html'
  version: 1.0.0
# externalDocs:
#   description: Find out more about GameConSuite
#   url: 'https://gameconsuite.com'
tags:
  - name: GameConSuite
    description: Event and attendee management software
    externalDocs:
      description: Find out more
      url: 'https://gameconsuite.com'
  - name: event
    description: Operations about events
  - name: member
    description: Operations about GMs and attendees of the convention
  - name: user
    description: Operations about login accounts and access permissions
  - name: order
    description: Operations about tickets
paths:
  /event:
    put:
      tags:
        - event
      summary: Update an existing event
      operationId: updateEvent
      requestBody:
        description: Event object that needs to be added to the convention
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/xml:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      responses:
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Event not found
          content: {}
        '405':
          description: Validation exception
          content: {}
      # security:
        # - gameconsuite_auth:
        #     - 'write:events'
        #     - 'read:events'
      x-codegen-request-body-name: body
    post:
      tags:
        - event
      summary: Add a new event to the convention
      operationId: addEvent
      requestBody:
        description: Event object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/xml:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      responses:
        '405':
          description: Invalid input
          content: {}
      # security:
      #   - gameconsuite_auth:
      #       - 'write:events'
      #       - 'read:events'
      x-codegen-request-body-name: body
  '/event/{eventId}':
    get:
      tags:
        - event
      summary: Find event by ID
      description: Returns a single event
      operationId: getEventById
      parameters:
        - name: eventId
          in: path
          description: ID of event to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Event'
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Event not found
          content: {}
      # security:
      #   - api_key: []
    post:
      tags:
        - event
      summary: Updates an event in the convention with form data
      operationId: updateEventWithForm
      parameters:
        - name: eventId
          in: path
          description: ID of event that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Updated name of the event
                status:
                  type: string
                  description: Updated status of the pet
      responses:
        '405':
          description: Invalid input
          content: {}
      # security:
      #   - gameconsuite_auth:
      #       - 'write:events'
      #       - 'read:events'
    delete:
      tags:
        - event
      summary: Deletes an event
      operationId: deleteEvent
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: eventId
          in: path
          description: Event id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Event not found
          content: {}
      # security:
      #   - gameconsuite_auth:
      #       - 'write:events'
      #       - 'read:events'
  /member:
    post:
      tags:
        - member
      summary: Create a new member
      description: This can only be done by an admin
      operationId: createMember
      requestBody:
        description: Created member object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Member'
        required: true
      responses:
        default:
          description: successful operation
          content: {}
      x-codegen-request-body-name: body
  '/member/{memberId}':
    put:
      tags:
        - member
      summary: Update an existing member
      description: This can only be done by an admin or member with permissions
      operationId: updateMember
      parameters:
        - name: memberId
          in: path
          description: ID of member that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Revised member object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Member'
        required: true
      responses:
        default:
          description: successful operation
          content: {}
      x-codegen-request-body-name: body
    post:
      tags:
        - member
      summary: Updates a member with form data
      operationId: updateMemberWithForm
      parameters:
        - name: memberId
          in: path
          description: ID of member that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                fName:
                  type: string
                  description: Updated first name
                lname:
                  type: string
                  description: Updated last name
      responses:
        '405':
          description: Invalid input
          content: {}
      # security:
      #   - gameconsuite_auth:
      #       - 'write:members'
      #       - 'read:members'
    delete:
      tags:
        - member
      summary: Removes a member
      operationId: deleteMember
      parameters:
        - name: memberId
          in: path
          description: ID of member that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '405':
          description: Invalid input
          content: {}
      # security:
      #   - gameconsuite_auth:
      #       - 'write:members'
      #       - 'read:members'
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        default:
          description: successful operation
          content: {}
      x-codegen-request-body-name: body
  '/user/{username}':
    get:
      tags:
        - user
      summary: Get user by user name
      operationId: getUserByName
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid username supplied
          content: {}
        '404':
          description: User not found
          content: {}
    put:
      tags:
        - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: username
          in: path
          description: name that need to be updated
          required: true
          schema:
            type: string
      requestBody:
        description: Updated user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '400':
          description: Invalid user supplied
          content: {}
        '404':
          description: User not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid username supplied
          content: {}
        '404':
          description: User not found
          content: {}
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
    Member:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        groupName:
          type: string
        email:
          type: string
        phone:
          type: string
      xml:
        name: Member
    EventType:
      type: object
      properties:
        id:
          type: integer
          format: int64
        abbr:
          type: string
        label:
          type: string
        order:
          type: integer
          format: int64
      xml:
        name: EventType
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        label:
          type: string
      xml:
        name: Tag
    Room:
      type: object
      properties:
        id:
          type: integer
          format: int64
        label:
          type: string
      xml:
        name: Room
    Event:
      required:
        - name
        - eventType
        - game
        - gm
      type: object
      properties:
        id:
          type: integer
          format: int64
        eventType:
          $ref: '#/components/schemas/EventType'
        gm:
          $ref: '#/components/schemas/Member'
        game:
          type: string
          example: 7 Wonders
        title:
          type: string
          example: Leaders
        tags:
          type: array
          xml:
            name: tag
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        day:
          type: string
          description: day of the event
          enum:
            - FRI
            - SAT
            - SUN
        time:
          type: integer
          format: int64
          description: first 2 digits of event time in 24 hour clock
        room:
          $ref: '#/components/schemas/Room'
        table:
          type: string
      xml:
        name: Event
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  # securitySchemes:
  #   gameconsuite_auth:
  #     type: oauth2
  #     flows:
  #       implicit:
  #         authorizationUrl: 'http://gameconsuite.swagger.io/oauth/dialog'
  #         scopes:
  #           'write:pets': modify pets in your account
  #           'read:pets': read your pets
  #   api_key:
  #     type: apiKey
  #     name: api_key
  #     in: header
