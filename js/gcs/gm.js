$(function() {

	// Function for toggling options on/off in a cross-browser supported way
	jQuery.fn.toggleOption = function( show ) {
	    jQuery( this ).toggle( show );
	    var toggleParents = jQuery( this ).parent( '.toggleOption' ).length;
	    if( show ) {
	        if( toggleParents > 0 ) {
	        	jQuery( this ).unwrap( );
	        }
	    } else if(toggleParents == 0) {
	        jQuery( this ).wrap( '<span class="toggleOption" style="display: none;" />' );
	    }
	};

	var gcs = {};
	gcs.SubmitEventView = function() {
		"use strict";
		var self = $(this);

		/**
			lengthSource: A jQuery element whose .val() will return the length of time in hours that the event will take
			timeSlots: An array of jQuery elements who each contain <options> whose .val() will return the timeslot chosen
			durationMap: A JSON Map that looks like {optionId : lengthOfTimeInHours}
		*/
		this.registerTimeslotFilters = function(lengthSource, timeSlots, durationMap) {
			
			var callback = function() {
				var length = parseFloat(lengthSource.val());
				if(isNaN(length)) return;
				timeSlots.each(function() {
					$("option",this).each(function() {
						var $this = $(this);
						var slotDurations = durationMap[parseFloat($this.val())];
						if(slotDurations == null) return;
						if($.inArray(length, slotDurations) >= 0 || length == 1 || length >= 7) {
							$this.toggleOption(true);
						} else {
							$this.toggleOption(false);
						}
					});
				});
			};

			lengthSource.on("change", callback);
			
			// Trigger it once manually to ensure it works on page reload
			lengthSource.trigger("change");
		}
	}
	

	var submitEventView = new gcs.SubmitEventView();

	// Need to assign a class to the options in the html options generated by smarty... no hook for sticking this into the DOM
	$(["i_c1","i_c2","i_c3"]).each(function() {
		var selector = "[name='"+this+"']";
		$(selector).addClass("time-slot");
	});
	
	// slotDurations defined earlier in template
	submitEventView.registerTimeslotFilters($("#length-of-event"), $(".time-slot"), slotDurations);
});