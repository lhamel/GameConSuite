<?php

/**
 * GameConSuite Admin API
 * PHP version 7.2
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * This is the administrative API for GameConSuite.  You can find out more about Game Con Suite at  [https://gameconsuite.org](https://gameconsuite.org)
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */
namespace OpenAPIServer\Api;

use Psr\Container\ContainerInterface;
use Psr\Http\Message\ServerRequestInterface;
use Psr\Http\Message\ResponseInterface;
use Slim\Exception\HttpNotImplementedException;

/**
 * AbstractGamemasterApi Class Doc Comment
 *
 * @package OpenAPIServer\Api
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */
abstract class AbstractGamemasterApi
{

    /**
     * @var ContainerInterface|null Slim app container instance
     */
    protected $container;

    /**
     * Route Controller constructor receives container
     *
     * @param ContainerInterface|null $container Slim app container instance
     */
    public function __construct(ContainerInterface $container = null)
    {
        $this->container = $container;
    }


    /**
     * GET getGMEvent
     * Summary: Find event by ID
     * Notes: Returns a single event
     * Output-Formats: [application/xml, application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getGMEvent(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $memberId = $args['memberId'];
        $eventId = $args['eventId'];
        $message = "How about implementing getGMEvent as a GET method in OpenAPIServer\Api\GamemasterApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET getGMEventsByMember
     * Summary: Get the list of GM events for the specified member
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getGMEventsByMember(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $memberId = $args['memberId'];
        $message = "How about implementing getGMEventsByMember as a GET method in OpenAPIServer\Api\GamemasterApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * POST submitGMEventsByMember
     * Summary: Finalize and submit the current session event
     * Notes: Submit the current event and send an email to the submitter and to registration
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function submitGMEventsByMember(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $memberId = $args['memberId'];
        $body = $request->getParsedBody();
        $message = "How about implementing submitGMEventsByMember as a POST method in OpenAPIServer\Api\GamemasterApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * PATCH updateGMEvent
     * Summary: Send allowed modifications for the specified event
     * Notes: Gamemasters of the event may modify VTT information after submission
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function updateGMEvent(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $memberId = $args['memberId'];
        $eventId = $args['eventId'];
        $body = $request->getParsedBody();
        $message = "How about implementing updateGMEvent as a PATCH method in OpenAPIServer\Api\GamemasterApi class?";
        throw new HttpNotImplementedException($request, $message);
    }
}
