<?php

/**
 * GameConSuite Admin API
 * PHP version 7.2
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * This is the administrative API for GameConSuite.  You can find out more about Game Con Suite at  [https://gameconsuite.org](https://gameconsuite.org)
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 */
namespace OpenAPIServer\Model;

use OpenAPIServer\BaseModel;

/**
 * Event
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */
class Event extends BaseModel
{
    /**
     * @var string Models namespace.
     * Can be required for data deserialization when model contains referenced schemas.
     */
    protected const MODELS_NAMESPACE = '\OpenAPIServer\Model';

    /**
     * @var string Constant with OAS schema of current class.
     * Should be overwritten by inherited class.
     */
    protected const MODEL_SCHEMA = <<<'SCHEMA'
{
  "required" : [ "ages", "category", "conventionId", "duration", "game", "gm", "id", "maxplayers" ],
  "type" : "object",
  "properties" : {
    "id" : {
      "type" : "integer",
      "format" : "int64"
    },
    "conventionId" : {
      "type" : "integer",
      "format" : "int32"
    },
    "category" : {
      "$ref" : "#/components/schemas/Category"
    },
    "gm" : {
      "$ref" : "#/components/schemas/Member"
    },
    "game" : {
      "type" : "string",
      "example" : "7 Wonders"
    },
    "title" : {
      "type" : "string",
      "example" : "Leaders"
    },
    "tags" : {
      "type" : "array",
      "xml" : {
        "name" : "tag",
        "wrapped" : true
      },
      "items" : {
        "$ref" : "#/components/schemas/Tag"
      }
    },
    "day" : {
      "type" : "string",
      "description" : "day of the event",
      "enum" : [ "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun" ]
    },
    "time" : {
      "type" : "number",
      "description" : "Start time of event, as first 2 digits of event time in 24 hour clock",
      "format" : "float"
    },
    "endtime" : {
      "type" : "number",
      "description" : "End time of event, as first 2 digits of event time in 24 hour clock",
      "format" : "float"
    },
    "duration" : {
      "type" : "number",
      "format" : "float"
    },
    "maxplayers" : {
      "type" : "integer",
      "description" : "the number of seats available in the game, must be larger than minplayers",
      "format" : "int32"
    },
    "minplayers" : {
      "type" : "integer",
      "description" : "the minimum number of player required to play the game",
      "format" : "int32"
    },
    "desclong" : {
      "type" : "string"
    },
    "descshort" : {
      "type" : "string"
    },
    "exper" : {
      "type" : "string",
      "description" : "experience rating (1, 3, 5), where 1 is the least experience",
      "enum" : [ "1", "3", "5" ]
    },
    "complex" : {
      "type" : "string",
      "description" : "complexity rating (A, C, E), where A is the least complex",
      "enum" : [ "A", "C", "E" ]
    },
    "room" : {
      "$ref" : "#/components/schemas/Room"
    },
    "table" : {
      "type" : "string"
    },
    "ages" : {
      "type" : "integer",
      "description" : "the minimum age recommended by the gamemaster (7,13,18,19/Mature)",
      "format" : "int32"
    },
    "cost" : {
      "type" : "number",
      "description" : "Price of event ticket",
      "format" : "float"
    },
    "platform" : {
      "type" : "string"
    },
    "fill" : {
      "type" : "number",
      "description" : "the number of seats filled, when enabled",
      "format" : "int(32)"
    },
    "soldout" : {
      "type" : "boolean",
      "description" : "true if event has no seats available"
    }
  },
  "xml" : {
    "name" : "Event"
  }
}
SCHEMA;
}
