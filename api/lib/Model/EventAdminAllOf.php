<?php

/**
 * EventAdminAllOf
 *
 * PHP version 7.1
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 */
namespace OpenAPIServer\Model;

use OpenAPIServer\Interfaces\ModelInterface;

/**
 * EventAdminAllOf
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */
class EventAdminAllOf implements ModelInterface
{
    private const MODEL_SCHEMA = <<<'SCHEMA'
{
  "properties" : {
    "s_comments" : {
      "type" : "string",
      "description" : "Comments from GM to scheduler about event"
    },
    "s_setup" : {
      "description" : "Request from GM about space setup"
    },
    "s_table_type" : {
      "type" : "string",
      "description" : "Request from GM about type of table"
    },
    "s_eventcom" : {
      "type" : "string",
      "description" : "Comments from GM to scheduler about scheduling"
    },
    "b_approval" : {
      "type" : "boolean",
      "description" : "true if event is approved for public release"
    },
    "b_edited" : {
      "type" : "boolean",
      "description" : "true if copy editing is complete"
    },
    "i_c1" : {
      "type" : "integer",
      "description" : "1st choice for time slot",
      "format" : "int32"
    },
    "i_c2" : {
      "type" : "integer",
      "description" : "2nd choice for time slot",
      "format" : "int32"
    },
    "i_c3" : {
      "type" : "integer",
      "description" : "3rd choice for time slot",
      "format" : "int32"
    },
    "i_profit" : {
      "type" : "number",
      "format" : "float"
    },
    "i_actual" : {
      "type" : "integer",
      "description" : "Event attendance entered by event runner",
      "format" : "int32"
    },
    "b_showed_up" : {
      "type" : "boolean",
      "description" : "Entered by event runner, true if GM showed up"
    },
    "b_prize" : {
      "type" : "integer",
      "description" : "Entered by event runner, number of prize tokens awarded",
      "format" : "int32"
    },
    "s_note" : {
      "type" : "string"
    },
    "d_updated" : {
      "type" : "string",
      "description" : "Date the event was last updated",
      "format" : "date-time"
    },
    "d_created" : {
      "type" : "string",
      "description" : "Date the event was submitted",
      "format" : "date-time"
    }
  }
}
SCHEMA;

    /** @var string $sComments Comments from GM to scheduler about event*/
    private $sComments;

    /** @var AnyType $sSetup Request from GM about space setup*/
    private $sSetup;

    /** @var string $sTableType Request from GM about type of table*/
    private $sTableType;

    /** @var string $sEventcom Comments from GM to scheduler about scheduling*/
    private $sEventcom;

    /** @var bool $bApproval true if event is approved for public release*/
    private $bApproval;

    /** @var bool $bEdited true if copy editing is complete*/
    private $bEdited;

    /** @var int $iC1 1st choice for time slot*/
    private $iC1;

    /** @var int $iC2 2nd choice for time slot*/
    private $iC2;

    /** @var int $iC3 3rd choice for time slot*/
    private $iC3;

    /** @var float $iProfit */
    private $iProfit;

    /** @var int $iActual Event attendance entered by event runner*/
    private $iActual;

    /** @var bool $bShowedUp Entered by event runner, true if GM showed up*/
    private $bShowedUp;

    /** @var int $bPrize Entered by event runner, number of prize tokens awarded*/
    private $bPrize;

    /** @var string $sNote */
    private $sNote;

    /** @var \DateTime $dUpdated Date the event was last updated*/
    private $dUpdated;

    /** @var \DateTime $dCreated Date the event was submitted*/
    private $dCreated;

    /**
     * Returns model schema.
     *
     * @param bool $assoc When TRUE, returned objects will be converted into associative arrays. Default FALSE.
     *
     * @return array
     */
    public static function getOpenApiSchema($assoc = false)
    {
        return json_decode(static::MODEL_SCHEMA, $assoc);
    }
}
